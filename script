#!/bin/bash

echo "HELLO"
read -p 'Please write the name of the disk where the system will be installed (use lsblk example:sda/nvme0n1) : ' diskvar
read -sp 'Password for disk encryption: ' passdiskvar
echo
read -p 'Write hostname(example:mypc) : ' hostnamevar
read -sp 'Password for root user : ' passrootvar
echo
read -p 'Write username : ' uservar
read -sp 'Password for user: ' userpassvar
echo
if [ "${diskvar::-3}" == "nvme" ]; then
  ndiskvar=${diskvar}'p'
  echo 'Disk is : '${ndiskvar::-1}
else
  ndiskvar=${diskvar}
  echo 'DisK is : '$diskvar
fi

#sgdisk --zap-all /dev/sda
echo "-----------------------------------Do o gdisk--------------------------------------"
printf "o\ny\nw\ny\n" | gdisk /dev/$diskvar
echo "-----------------------------------------------------------------------------------"
echo "-------------------------------CREATE EFI 512M-------------------------------------"
echo "-----------------------------------------------------------------------------------"
printf "n\n1\n\n+512M\nef00\nw\ny\n" | gdisk /dev/$diskvar
echo "-----------------------------------------------------------------------------------"
echo "-------------------------------------DONE------------------------------------------"
echo "-----------------------------------------------------------------------------------"
echo "-------------------------------CREATE BOOT----------------------------------------"
echo "-----------------------------------------------------------------------------------"
printf "n\n2\n\n+1G\n\nw\ny\n" | gdisk /dev/$diskvar
echo "-------------------------------CREATE SWAP 8G--------------------------------------"
echo "-----------------------------------------------------------------------------------"
printf "n\n3\n\n+8G\n8200\nw\ny\n" | gdisk /dev/$diskvar
echo "-----------------------------------------------------------------------------------"
echo "--------------------------------SWAPON DONE----------------------------------------"
echo "-----------------------------------------------------------------------------------"
echo "-------------------------------CREATE BTRFS----------------------------------------"
echo "-----------------------------------------------------------------------------------"
printf "n\n4\n\n\n\nw\ny\n" | gdisk /dev/$diskvar
echo "-----------------------------------------------------------------------------------"
echo "--------------------------------DONE BTRFS-----------------------------------------"
echo "-----------------------------------------------------------------------------------"

yes | mkfs.fat -F32 /dev/${ndiskvar}1 #p1
yes | mkfs.ext2 /dev/${ndiskvar}2     #p2
yes | mkswap /dev/${ndiskvar}3		  #p3
swapon /dev/${ndiskvar}3              #p3
#######
#ENCRYPT############
#############
echo "Setting up encryption"
printf "${passdiskvar}" | cryptsetup luksFormat /dev/${ndiskvar}4
printf "${passdiskvar}" | cryptsetup luksOpen /dev/${ndiskvar}4 cryptroot
yes | mkfs.btrfs -f /dev/mapper/cryptroot
mount /dev/mapper/cryptroot /mnt
btrfs su cr /mnt/@
btrfs su cr /mnt/@home
umount /mnt
mount -o noatime,compress=zstd:2,space_cache=v2,discard=async,subvol=@ /dev/mapper/cryptroot /mnt
mkdir -p /mnt/{boot,home}
mount -o noatime,compress=zstd:2,space_cache=v2,discard=async,subvol=@home /dev/mapper/cryptroot /mnt/home
mount /dev/${ndiskvar}2 /mnt/boot
mkdir -p /mnt/boot/EFI
mount /dev/${ndiskvar}1 /mnt/boot/EFI
yes | pacstrap /mnt base linux linux-firmware intel-ucode btrfs-progs
genfstab -U /mnt >> /mnt/etc/fstab

###############################
#### Configure base system ####
###############################

arch-chroot /mnt /bin/bash <<EOF
echo "-----------Setting time zone--------------------"
ln -sf /usr/share/zoneinfo/Europe/Moscow /etc/localtime
hwclock --systohc
echo "---------Locale conf----------------------------"
echo "LANG=ru_RU.UTF-8" >> /etc/locale.conf
echo "KEYMAP=ru"  >> /etc/vconsole.conf
echo "FONT=cyr-sun16" >> /etc/vconsole.conf
echo "--------Setting and generating locale-----------"
echo "ru_RU.UTF-8 UTF-8" >> /etc/locale.gen
echo "en_EN.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen
echo "---------Setting hostname-----------------------"
echo "${hostnamevar}" > /etc/hostname
echo "${hostnamevar}"
echo "-----------Setting hosts------------------------"
echo "127.0.0.1     localhost" >> /etc/hosts
echo "::1     localhost" >> /etc/hosts
echo "127.0.0.1     ${hostnamevar}.localdomain     ${hostnamevar}" >> /etc/hosts
echo "---------Setting root password------------------"
echo "root:${passrootvar}" | chpasswd
pacman --noconfirm -S grub efibootmgr networkmanager vim nano git bat network-manager-applet dialog mtools dosfstools bluez bluez-utils alsa-utils pulseaudio pulseaudio-bluetooth base-devel linux-headers zsh modemmanager usb_modeswitch
echo "----------Generating initramfs------------------"
sed -i 's/^MODULES.*/MODULES=(btrfs)/' /etc/mkinitcpio.conf
sed -i 's/^HOOKS.*/HOOKS="base udev autodetect modconf block encrypt filesystems keyboard"/' /etc/mkinitcpio.conf
mkinitcpio -p linux
echo "---------GRUB INSTALL-------------------------"
grub-install --target=x86_64-efi --bootloader-id=grub_uefi --recheck
grub-mkconfig -o /boot/grub/grub.cfg
sed -i 's/^GRUB_CMDLINE_LINUX_DEFAULT.*/GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet cryptdevice=UUID='$(blkid -s UUID -o value /dev/${ndiskvar}4)':cryptroot root=\/dev\/mapper\/cryptroot"/' /etc/default/grub
echo "GRUB_ENABLE_CRYPTODISK=y" >> /etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg
echo "---------GENERATEUSER-------------------------"
echo "%wheel ALL=(ALL:ALL) ALL" >> /etc/sudoers
useradd --create-home -s /bin/zsh ${uservar}
echo ${uservar}:${userpassvar} | chpasswd
usermod -aG wheel ${uservar}
echo "---------ENABLE SERVICES---------------------"
systemctl enable sshd
systemctl enable NetworkManager
systemctl enable bluetooth
systemctl enable ModemManager.service
echo "blacklist    pcspkr" >> /etc/modprobe.d/nobeep.conf
echo "----------YAY OHMYZSH-----------------------------"
cd /opt
git clone https://aur.archlinux.org/yay-git.git
chown -R ${uservar}:${uservar} ./yay-git
cd /opt/yay-git
su ${uservar}
yes | makepkg -si
EOF

#blkid uuid sda/nvme 1 add to /etc/fstab





#echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
#localectl set-locale ru_RU.UTF-8


#grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
#umount -R /mnt
#blkid uuid /dev/sda4/ copy to nano /etc/default/grub
#GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet cryptdevice=UUID=37fedf47-45be-4fda-ac60-5466fa46ed3d:cryptroot root=/dev/mapper/cryptroot"
#grub-mkconfig -o /boot/grub/grub.cfg
#sudo reflector --verbose --country 'Russia' -l 5 --sort rate --save /etc/pacman.d/mirrorlist
#blkid -s UUID -o value /dev/sda1
# dd if=/dev/zero of=/dev/sda bs=500M count=1 dd if=/dev/zero of=/dev/sda bs=8M count=4
#yes | mkfs.btrfs -f /dev/sda3
#mount /dev/sda3 /mnt
#btrfs su cr /mnt/@
#btrfs su cr /mnt/@home
#umount /mnt
#mount -o noatime,compress=zstd:2,space_cache=v2,discard=async,subvol=@ /dev/sda3 /mnt
#mkdir -p /mnt/{boot/efi,home}
#mount -o noatime,compress=zstd:2,space_cache=v2,discard=async,subvol=@home /dev/sda3 /mnt/home
#mount /dev/sda1 /mnt/boot/efi
